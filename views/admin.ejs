<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Page</title>
    <link rel="stylesheet" href="/admin.css">
</head>
<body>
    <div class="main">
        <h2>Users List</h2> 
        <div class="admin_btn"> <button ><a href="./">Visit site</a></button> </div>
    </div>
    <div class="users-list">
        <% if (users && users.length) { %>
            <% users.forEach(user => { %>
                <div class="user">
                    <p>Full Name: <%= user.fullName %></p>
                    <p>Email: <%= user.email %></p>
                    <p>Role: <%= user.role %></p>
                    <form action="/edit-user" method="post">
                        <input type="hidden" name="userId" value="<%= user._id %>">
                        <label for="newName">New Name:</label>
                        <input type="text" id="newName" name="newName" value="<%= user.fullName %>" required>
                        <button type="submit" class="edit">Edit</button>
                        <span class="edit-message"></span> <!-- Container for edit message -->
                        <button class="del" onclick="deleteUser('<%= user._id %>')">Delete</button>
                        <span class="delete-message"></span> <!-- Container for delete message -->
                    </form>
                  <!--   <hr> -->
                </div>
                
            <% }) %>
        <% } else { %>
            <p>No users found</p>
        <% } %>
    </div>
   
    <script>
        // Function to handle user deletion
        function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user?')) {
                fetch(`/admin/delete-user/${userId}`, {
                    method: 'POST'
                })
                .then(response => {
                    if (response.ok) {
                        location.reload(); // Reload the page after successful deletion
                    } else {
                        throw new Error('Failed to delete user');
                    }
                })
                .catch(error => {
                    console.error('Error deleting user:', error.message);
                    const deleteMessage = document.querySelector('.delete-message');
                    deleteMessage.textContent = 'Failed to delete user. Please try again.';
                    setTimeout(() => {
                        deleteMessage.textContent = '';
                    }, 3000);
                });
            }
        }

        // Function to handle user editing
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                const formData = new FormData(form);
                const userId = formData.get('userId');
                const newName = formData.get('newName');

                fetch('/edit-user', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (response.ok) {
                        const editMessage = form.querySelector('.edit-message');
                        editMessage.textContent = 'User edited successfully.';
                        setTimeout(() => {
                            editMessage.textContent = '';
                        }, 3000);
                    } else {
                        throw new Error('Failed to edit user');
                    }
                })
                .catch(error => {
                    console.error('Error editing user:', error.message);
                    const editMessage = form.querySelector('.edit-message');
                    editMessage.textContent = 'Failed to edit user. Please try again.';
                    setTimeout(() => {
                        editMessage.textContent = '';
                    }, 3000);
                });
            });
        });
    </script>
</body>
</html>
